name: Merge Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to deploy to
        options:
          - dev
          - test
          - model
          - prod
      version:
        required: true
        type: string

jobs:
  checkout_and_run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set Up Environment and Write to File
        run: |
          buildStartTime=$(date "+%Y-%m-%d %H:%M:%S.000")
          echo "Reading configuration from pipeline.properties"
          tempProps=$(<"pipeline.properties")
          echo "$tempProps"

          ucdComponentName=$(echo "$tempProps" | grep 'ucdComponentName' | cut -d'=' -f2)
          echo "$ucdComponentName"
          ucdApplicationName=$(echo "$tempProps" | grep 'ucdApplicationName' | cut -d'=' -f2)
          ucdProcessName=$(echo "$tempProps" | grep 'ucdProcessName' | cut -d'=' -f2)
          devRecipients=$(echo "$tempProps" | grep 'devRecipients' | cut -d'=' -f2)
          modelRecipients=$(echo "$tempProps" | grep 'modelRecipients' | cut -d'=' -f2)
          prodRecipients=$(echo "$tempProps" | grep 'prodRecipients' | cut -d'=' -f2)
          successRecipients=$(echo "$tempProps" | grep 'successRecipients' | cut -d'=' -f2)
          unitTest=$(echo "$tempProps" | grep 'unitTest' | cut -d'=' -f2)

          # Set Flags
          isDevelop=$(echo "$BRANCH_NAME" | grep -q 'dev/' && echo true || echo false)
          isDevelop2=$(echo "$BRANCH_NAME" | grep -q 'dev-02/' && echo true || echo false)
          isTest=$(echo "$BRANCH_NAME" | grep -q 'test/' && echo true || echo false)
          isProd2=$(echo "$BRANCH_NAME" | grep -q 'prod2/' && echo true || echo false)
          isModel=$(echo "$BRANCH_NAME" | grep -q 'release/' && echo true || echo false)
          isProd=$(echo "$BRANCH_NAME" | grep -q 'master' && echo true || echo false)

          if [ "$isProd" = true ]; then
            ucdEnv='prod'
            isCRRequired=true
            isPRRequired=true
            recipients="$prodRecipients,$globalProdRecipients"
          elif [ "$isProd2" = true ]; then
            ucdEnv='prod2'
            isCRRequired=false
            isPRRequired=false
            recipients="$prodRecipients,$globalProdRecipients"
          elif [ "$isModel" = true ]; then
            ucdEnv='model'
            isCRRequired=true
            isPRRequired=true
            recipients="$modelRecipients,$globalModelRecipients"
          elif [ "$isTest" = true ]; then
            ucdEnv='test'
            isCRRequired=true
            isTestCaseRequired=true
            isPRRequired=true
            recipients="$modelRecipients,$globalTestRecipients"
          elif [ "$isDevelop" = true ]; then
            ucdEnv='dev'
            recipients="$devRecipients,$globalDevRecipients"
          elif [ "$isDevelop2" = true ]; then
            ucdEnv='dev-02'
            recipients="$devRecipients,$globalDev02Recipients"
          fi

          envName=$(echo "$ucdEnv" | tr '[:lower:]' '[:upper:]')
          unique_id=$(date '+%s')
          ucdVersion="${ucdComponentName}:${ucdEnv}-${unique_id}-v1-${GITHUB_RUN_NUMBER}"
          commitId=$(git rev-parse HEAD)
          echo "commitId: $commitId"
          gitLog=$(git log -n 1 --pretty=format:%s)
          echo "gitLog: $gitLog"
          echo "$tempProps" > workflow_vars.txt
          echo "$ucdComponentName" >> workflow_vars.txt
          echo "$ucdVersion" >> workflow_vars.txt
          echo "$isCRRequired" >> workflow_vars.txt
          echo "$isPRRequired" >> workflow_vars.txt
          echo "$recipients" >> workflow_vars.txt
      - name: Archive Workflow Vars
        uses: actions/upload-artifact@v2
        with:
          name: workflow-vars
          path: workflow_vars.txt

  build:
    runs-on: ubuntu-latest
    needs: [checkout_and_run]
    steps:
      - name: Download Workflow Vars
        uses: actions/download-artifact@v2
        with:
          name: workflow-vars
      - name: Read Workflow Vars
        run: |
          cat workflow_vars.txt
      # Other steps for build job...

  UCDPublish:
  runs-on: ubuntu-latest
  needs: [checkout_and_run]
  steps:
    - name: Download Workflow Vars
      uses: actions/download-artifact@v2
      with:
        name: workflow-vars
    - name: Read Workflow Vars
      run: |
        cat workflow_vars.txt
        ucdComponentName=$(head -n 1 workflow_vars.txt)
        ucdVersion=$(sed -n '2p' workflow_vars.txt)
        isCRRequired=$(sed -n '3p' workflow_vars.txt)
        isPRRequired=$(sed -n '4p' workflow_vars.txt)
        recipients=$(sed -n '5p' workflow_vars.txt)
    # Other steps for UCDPublish job...
    - name: Debug - Print pipeline.properties
      run: ls -lash
    - name: Publish to UCD
      run: |
        echo "Publishing Component: [${ucdComponentName}], GITHUB_RUN_NUMBER: [${GITHUB_RUN_NUMBER}]"
        export ucdArtifacts="*.zip"

        echo "Publishing UCD version: [${ucdVersion}], ucdComponentName: [${ucdComponentName}], ucdApplicationName: [${ucdApplicationName}]"

        ucdTriggerPush "${ucdComponentName}" "${ucdVersion}" "${ucdArtifacts}" true
